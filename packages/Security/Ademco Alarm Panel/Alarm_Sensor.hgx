<?xml version="1.0" encoding="utf-16"?>
<ProgramBlock xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ConditionType>OnTrue</ConditionType>
  <Conditions />
  <Commands />
  <ScriptCondition>var moduleDomain = "HomeAutomation.AlarmPanel.Sensor";
Program.Setup(()=&gt;
{              
  Program.AddVirtualModules(moduleDomain, "Sensor", "homegenie/generic/sensor", 2, 25);
  Program.AddFeature("HomeAutomation.AlarmPanel.Sensor", "Sensor", "StringMatch", "String to match on alarm panel", "text");
  Program.AddFeature("HomeAutomation.AlarmPanel.Sensor", "Sensor", "RfxId", "RFX ID to match", "text");
});
return true;
</ScriptCondition>
  <ScriptSource>When.ModuleParameterChanged((module, parameter) =&gt; {

  if (parameter.Name == "AlarmPanel.Status"){
  
    var panelValue = new System.Text.RegularExpressions.Regex(@"[^a-zA-Z0-9-]", System.Text.RegularExpressions.RegexOptions.None).Replace(parameter.Value, @"").ToString().ToLower();

    Modules.InDomain("HomeAutomation.AlarmPanel.Sensor").Each((sensor) =&gt; {

      var stringMatch = new System.Text.RegularExpressions.Regex(@"[^a-zA-Z0-9-]", System.Text.RegularExpressions.RegexOptions.None).Replace(sensor.Parameter("StringMatch").Value, @"").ToString().ToLower();

      if(stringMatch == panelValue){
        if(sensor.Parameter("Status.Level").Value == "0" || sensor.Parameter("Status.Parameter").Value == ""){
          sensor.Parameter("Status.Level").Value = "1";
          Program.RaiseEvent(sensor, "Status.Level", sensor.Parameter("Status.Level").Value, "Alarm Panel");
        }
      }
      else if (sensor.Parameter("Status.Level").Value == "1" &amp;&amp; sensor.Parameter("Status.Level").UpdateTime.ToLocalTime() &lt; DateTime.Now.AddSeconds(-1)){
        sensor.Parameter("Status.Level").Value = "0";
        Program.RaiseEvent(sensor, "Status.Level", sensor.Parameter("Status.Level").Value, "Alarm Panel");
      }

      return false;

    });
    
  } else if(parameter.Name == "AlarmPanel.RFX") {

    Modules.InDomain("HomeAutomation.AlarmPanel.Sensor").Each((sensor) =&gt; {

      string[] rfxMessage = parameter.Value.Split(Convert.ToChar(":"));

      if(rfxMessage[0] == sensor.Parameter("RfxId").Value){
        if(sensor.Parameter("Status.Level").Value == "0" || sensor.Parameter("Status.Parameter").Value == ""){

          switch(rfxMessage[1]){
            case "02":
	          sensor.Parameter("RFX.Status").Value = "Battery";
            break;
            case "04":
	          sensor.Parameter("RFX.Status").Value = "Supervision";
            break;
            case "80":
	          sensor.Parameter("RFX.Status").Value = "Loop 1";
            break;
            case "20":
	          sensor.Parameter("RFX.Status").Value = "Loop 2";
            break;
            case "10":
	          sensor.Parameter("RFX.Status").Value = "Loop 3";
            break;
            case "40":
	          sensor.Parameter("RFX.Status").Value = "Loop 4";
            break;
            case "00":
	          sensor.Parameter("RFX.Status").Value = "Ready";
            break;
          }
          
          Program.RaiseEvent(sensor, "RFX.Status", sensor.Parameter("RFX.Status").Value, "Alarm Panel");
          
          if(rfxMessage[1] == "00")
            sensor.Parameter("Status.Level").Value = "0";
          else
            sensor.Parameter("Status.Level").Value = "1";

          Program.RaiseEvent(sensor, "Status.Level", sensor.Parameter("Status.Level").Value, "Alarm Panel");
        }
      }

      return false;

    });
    
  }

  return true;

});

Program.GoBackground();
</ScriptSource>
  <ScriptErrors>[]</ScriptErrors>
  <Domain>HomeAutomation.HomeGenie.Automation</Domain>
  <Address>1011</Address>
  <Name>Alarm Sensor</Name>
  <Description>Virtual security sensor for use with an Ademco alarm panel interface</Description>
  <Group>Santee Programs</Group>
  <Features>
    <ProgramFeature>
      <FieldType>text</FieldType>
      <ForDomains>HomeAutomation.AlarmPanel.Sensor</ForDomains>
      <ForTypes>Sensor</ForTypes>
      <Property>StringMatch</Property>
      <Description>String to match on alarm panel</Description>
    </ProgramFeature>
    <ProgramFeature>
      <FieldType>text</FieldType>
      <ForDomains>HomeAutomation.AlarmPanel.Sensor</ForDomains>
      <ForTypes>Sensor</ForTypes>
      <Property>RfxId</Property>
      <Description>RFX ID to match</Description>
    </ProgramFeature>
  </Features>
  <ActivationTime xsi:nil="true" />
  <TriggerTime>2015-11-13T22:43:34.9208771Z</TriggerTime>
  <Type>CSharp</Type>
  <IsEnabled>true</IsEnabled>
</ProgramBlock>