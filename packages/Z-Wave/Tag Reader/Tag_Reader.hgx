<?xml version="1.0" encoding="utf-16"?>
<ProgramBlock xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ConditionType>OnTrue</ConditionType>
  <Conditions />
  <Commands />
  <ScriptCondition>//Example program for the BeNext Tag reader
//This program allows to save tag IDs and remove them
//The event TagReader.Alarm is sent when a tag is recognized
//Author: Alexandre Schnegg &lt;alexandre.schnegg@gmail.com&gt;
Program.AddOption("LearningMode", "0", "LearningMode (1: enable, 0: disable)", "text");
Program.AddOption("Reset", "0", "Reset tag codes (1: enable, 0: disable), reset start after scanning a known tag", "text");
Program.Run();
</ScriptCondition>
  <ScriptSource>//Example program for the BeNext Tag reader
//This program allows to save tag IDs and remove them
//The event TagReader.Alarm is sent when a tag is recognized
//Author: Alexandre Schnegg &lt;alexandre.schnegg@gmail.com&gt;

var userId=1;

When.ModuleParameterChanged((module, parameter)=&gt;{
  //Tag reader report unknowm tag code
  if(module.Is("Tag reader") &amp;&amp; parameter.Is("EntryControl.UserCode"))
  {
    //Learning mode
    if(Program.Option("LearningMode").Value == "1")
    {
      Program.Notify("Tag reader", "User ID: "+userId.ToString()+" saved, tag value: "+parameter.Value);
      module.Command("UserCode.Set").Set(userId+"/1/"+parameter.Value); //1 : user id status,. should be 1 to save new user id
      userId++;
    }
    else
    {
      Program.Notify("Tag reader", "Unknown tag value: "+parameter.Value);
    }
  }
  //Reset mode
  else if(Program.Option("Reset").Value == "1" &amp;&amp; parameter.Is("Sensor.Alarm"))
  {
    for(var i=1;i&lt;=10;i++)
    {
      module.Command("UserCode.Set").Set(i+"/0/"+"00000000000000000000"); //0 : user id status,. should be 0 to remove user id, the third option doesn't matter
    }
    Program.Notify("Tag reader", "Reset done !");
  }
  //If tag is recognized
  else if(module.Is("Tag reader") &amp;&amp; parameter.Is("Sensor.Alarm"))
  {
    if(parameter.Value!="255")
    {
      Program.RaiseEvent("TagReader.Alarm", "0", "Tag reader");
      module.On(); //Notify the user with the tag reader's buzzer
    }
    else
    {
      Program.RaiseEvent("TagReader.Alarm", "1", "Tag reader");
      module.On(); //Notify the user with the tag reader's buzzer
    }
  }
  return true;
});

while (Program.IsEnabled)
{
  Pause(1);
}</ScriptSource>
  <ScriptErrors>[]</ScriptErrors>
  <Domain>HomeAutomation.HomeGenie.Automation</Domain>
  <Address>504</Address>
  <Name>Tag Reader</Name>
  <Description>Example program for the BeNext TagReader</Description>
  <Group>Z-Wave</Group>
  <Features />
  <ActivationTime xsi:nil="true" />
  <TriggerTime xsi:nil="true" />
  <Type>CSharp</Type>
  <IsEnabled>false</IsEnabled>
</ProgramBlock>