<?xml version="1.0" encoding="utf-16"?>
<ProgramBlock xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ConditionType>OnTrue</ConditionType>
  <Conditions />
  <Commands />
  <ScriptCondition>hg.Program.Run();
</ScriptCondition>
  <ScriptSource>var oled = hg.Modules.InDomain("Components.Ssd1306").WithAddress("0");
var temperature = hg.Modules.InDomain("Components.MCP3008").WithAddress("CH0").Get().Parameter("Sensor.Temperature");
var luminance = hg.Modules.InDomain("Components.MCP3008").WithAddress("CH1").Get().Parameter("Sensor.Luminance");
var energyMonitor = hg.Modules.InDomain("HomeAutomation.EnergyMonitor").WithAddress("1").Get();
var energyLoad = energyMonitor.Parameter("EnergyMonitor.WattLoad");
var operatingLights = energyMonitor.Parameter("EnergyMonitor.OperatingLights");
var operatingSwitches = energyMonitor.Parameter("EnergyMonitor.OperatingSwitches");
var weather = hg.Program.WithName("Weather Underground");

var monthNames = new Array("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC");
var dayNames = new Array("SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT");

oled.Command("Oled.DisplayClear").Execute();

while (hg.Program.IsEnabled)
{
  if (hg.Settings.Parameter('EdenDisplay.MenuMode').Value != 'ON')
  {
    // Eden TMP36 sensor
    oled.Command("Oled.GoTo").Execute("42/0");
    oled.Command("Oled.DrawText3").Execute("|" + (Math.round(temperature.DecimalValue * 10) / 10) + "\\");

    // Eden photo cell light sensor
    var lux = luminance.DecimalValue.toFixed(0);
    while (lux.length &lt; 4) lux = " " + lux;
    oled.Command("Oled.GoTo").Execute("0/0");
    oled.Command("Oled.DrawText2").Execute(lux);
    oled.Command("Oled.GoTo").Execute("0/2");
    oled.Command("Oled.DrawText").Execute("*LUX");

    // Current date time
    var today = new Date();
    var time = formatTime(today);
    var displayDate = dayNames[today.getDay()] + ',' + monthNames[today.getMonth()] + ' ' + today.getDate(); 
    oled.Command("Oled.GoTo").Execute("0/4");
    oled.Command("Oled.DrawText2").Execute(displayDate + "/CENTER");
    oled.Command("Oled.GoTo").Execute("0/6");
    oled.Command("Oled.DrawText2").Execute(time.Time + ' ' + time.AmPm + "/CENTER");
    hg.Pause(5);
  }
  if (hg.Settings.Parameter('EdenDisplay.MenuMode').Value != 'ON')
  {
    // Weather Underground data  
    var weatherText = weather.Parameter("Conditions.City").Value + " " + weather.Parameter("Conditions.TemperatureC").Value;
    if (weatherText.trim() != '')
    {
      oled.Command("Oled.GoTo").Execute("0/4");
      oled.Command("Oled.DrawText2").Execute(weatherText + "/CENTER");
      oled.Command("Oled.GoTo").Execute("0/6");
      oled.Command("Oled.DrawText2").Execute(weather.Parameter("Conditions.Description").Value + "/CENTER");
      hg.Pause(5);
    }
  }
  if (hg.Settings.Parameter('EdenDisplay.MenuMode').Value != 'ON')
  {
    // Energy monitor Watt load
    oled.Command("Oled.GoTo").Execute("0/4");
    oled.Command("Oled.DrawText2").Execute("Energy Use/CENTER");
    oled.Command("Oled.GoTo").Execute("0/6");
    oled.Command("Oled.DrawText2").Execute('/CENTER');
    oled.Command("Oled.GoTo").Execute("0/6");
    oled.Command("Oled.DrawText2").Execute('#' + operatingLights.Value + ' |' + operatingSwitches.Value + ' ^' + (Math.round(energyLoad.DecimalValue * 10) / 10));
  }  
  hg.Pause(5);
}

function formatTime(date) {
  var hours = date.getHours();
  var minutes = date.getMinutes();
  var ampm = hours &gt;= 12 ? 'PM' : 'AM';
  hours = hours % 12;
  hours = hours ? hours : 12; // the hour '0' should be '12'
  minutes = minutes &lt; 10 ? '0'+minutes : minutes;
  var strTime = hours + ':' + minutes;
  return { 'Time' : strTime, 'AmPm' : ampm};
}</ScriptSource>
  <ScriptErrors>[]</ScriptErrors>
  <Domain>HomeAutomation.HomeGenie.Automation</Domain>
  <Address>65</Address>
  <Name>Eden Oled Display</Name>
  <Description>Push Eden Board data to Ssd 1306 Oled Display connected to Raspberry Pi I2C port.
(Ssd 1306 display program must be also enabled)</Description>
  <Group>Raspberry Pi</Group>
  <Features />
  <ActivationTime xsi:nil="true" />
  <TriggerTime xsi:nil="true" />
  <Type>Javascript</Type>
  <IsEnabled>false</IsEnabled>
</ProgramBlock>